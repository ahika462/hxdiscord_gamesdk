// Generated by Haxe 4.3.4
#include <hxcpp.h>

#ifndef INCLUDED_38344beec7696400
#define INCLUDED_38344beec7696400
#include "cpp/Int64.h"
#endif
#ifndef INCLUDED_bdddd0690232daa5
#define INCLUDED_bdddd0690232daa5
#include "linc_discord_gamesdk.h"
#endif
#ifndef INCLUDED_discord_GameSDK
#include <discord/GameSDK.h>
#endif
#ifndef INCLUDED_discord__GameSDK_NativeString_Impl_
#include <discord/_GameSDK/NativeString_Impl_.h>
#endif
#ifndef INCLUDED_haxe_Int64Helper
#include <haxe/Int64Helper.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_313dfd27377afb93_34_create,"discord.GameSDK","create",0x38505564,"discord.GameSDK.create","discord/GameSDK.hx",34,0x5a9e60b9)
HX_LOCAL_STACK_FRAME(_hx_pos_313dfd27377afb93_38_runCallbacks,"discord.GameSDK","runCallbacks",0x5ad7d6ab,"discord.GameSDK.runCallbacks","discord/GameSDK.hx",38,0x5a9e60b9)
HX_LOCAL_STACK_FRAME(_hx_pos_313dfd27377afb93_42_registerCommand,"discord.GameSDK","registerCommand",0x49f3d9c0,"discord.GameSDK.registerCommand","discord/GameSDK.hx",42,0x5a9e60b9)
HX_LOCAL_STACK_FRAME(_hx_pos_313dfd27377afb93_46_registerSteam,"discord.GameSDK","registerSteam",0xe7ce5fc5,"discord.GameSDK.registerSteam","discord/GameSDK.hx",46,0x5a9e60b9)
HX_LOCAL_STACK_FRAME(_hx_pos_313dfd27377afb93_50_updateActivity,"discord.GameSDK","updateActivity",0x38cdb760,"discord.GameSDK.updateActivity","discord/GameSDK.hx",50,0x5a9e60b9)
namespace discord{

void GameSDK_obj::__construct() { }

Dynamic GameSDK_obj::__CreateEmpty() { return new GameSDK_obj; }

void *GameSDK_obj::_hx_vtable = 0;

Dynamic GameSDK_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< GameSDK_obj > _hx_result = new GameSDK_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool GameSDK_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4636f69c;
}

int GameSDK_obj::create(::String clientId,::hx::Null< int >  __o_flags){
            		int flags = __o_flags.Default(1);
            	HX_STACKFRAME(&_hx_pos_313dfd27377afb93_34_create)
HXDLIN(  34)		return discord_core::create(::haxe::Int64Helper_obj::parseString(clientId),( (::cpp::Int64)(flags) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(GameSDK_obj,create,return )

int GameSDK_obj::runCallbacks(){
            	HX_STACKFRAME(&_hx_pos_313dfd27377afb93_38_runCallbacks)
HXDLIN(  38)		return discord_core::runCallbacks();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GameSDK_obj,runCallbacks,return )

int GameSDK_obj::registerCommand(::String command){
            	HX_STACKFRAME(&_hx_pos_313dfd27377afb93_42_registerCommand)
HXDLIN(  42)		::String tmp = command;
HXDLIN(  42)		::String _hx_tmp;
HXDLIN(  42)		if (::hx::IsNotNull( tmp )) {
HXDLIN(  42)			_hx_tmp = tmp;
            		}
            		else {
HXDLIN(  42)			_hx_tmp = HX_("",00,00,00,00);
            		}
HXDLIN(  42)		return discord_activity::registerCommand(::discord::_GameSDK::NativeString_Impl__obj::_new(_hx_tmp));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GameSDK_obj,registerCommand,return )

int GameSDK_obj::registerSteam(int steamId){
            	HX_STACKFRAME(&_hx_pos_313dfd27377afb93_46_registerSteam)
HXDLIN(  46)		return discord_activity::registerSteam(( (unsigned int)(steamId) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GameSDK_obj,registerSteam,return )

void GameSDK_obj::updateActivity( ::Dynamic activity){
            	HX_STACKFRAME(&_hx_pos_313dfd27377afb93_50_updateActivity)
HXDLIN(  50)		int _hx_tmp;
HXDLIN(  50)		 ::Dynamic tmp = activity->__Field(HX_("type",ba,f2,08,4d),::hx::paccDynamic);
HXDLIN(  50)		if (::hx::IsNotNull( tmp )) {
HXDLIN(  50)			_hx_tmp = ( (int)(tmp) );
            		}
            		else {
HXDLIN(  50)			_hx_tmp = 0;
            		}
HXDLIN(  50)		::cpp::Int64 _hx_tmp1;
HXDLIN(  50)		 ::Dynamic tmp1 = activity->__Field(HX_("applicationId",4b,5f,bc,37),::hx::paccDynamic);
HXDLIN(  50)		if (::hx::IsNotNull( tmp1 )) {
HXDLIN(  50)			_hx_tmp1 = ( (::cpp::Int64)(tmp1) );
            		}
            		else {
HXDLIN(  50)			_hx_tmp1 = _hx_int64_make(0,0);
            		}
HXLINE(  51)		::String tmp2 = ( (::String)(activity->__Field(HX_("name",4b,72,ff,48),::hx::paccDynamic)) );
HXDLIN(  51)		::String _hx_tmp2;
HXDLIN(  51)		if (::hx::IsNotNull( tmp2 )) {
HXLINE(  51)			_hx_tmp2 = tmp2;
            		}
            		else {
HXLINE(  51)			_hx_tmp2 = HX_("",00,00,00,00);
            		}
HXDLIN(  51)		const char* _hx_tmp3 = ::discord::_GameSDK::NativeString_Impl__obj::_new(_hx_tmp2);
HXDLIN(  51)		::String tmp3 = ( (::String)(activity->__Field(HX_("state",11,76,0b,84),::hx::paccDynamic)) );
HXDLIN(  51)		::String _hx_tmp4;
HXDLIN(  51)		if (::hx::IsNotNull( tmp3 )) {
HXLINE(  51)			_hx_tmp4 = tmp3;
            		}
            		else {
HXLINE(  51)			_hx_tmp4 = HX_("",00,00,00,00);
            		}
HXDLIN(  51)		const char* _hx_tmp5 = ::discord::_GameSDK::NativeString_Impl__obj::_new(_hx_tmp4);
HXDLIN(  51)		::String tmp4 = ( (::String)(activity->__Field(HX_("details",c2,dc,56,ab),::hx::paccDynamic)) );
HXDLIN(  51)		::String _hx_tmp6;
HXDLIN(  51)		if (::hx::IsNotNull( tmp4 )) {
HXLINE(  51)			_hx_tmp6 = tmp4;
            		}
            		else {
HXLINE(  51)			_hx_tmp6 = HX_("",00,00,00,00);
            		}
HXDLIN(  51)		const char* _hx_tmp7 = ::discord::_GameSDK::NativeString_Impl__obj::_new(_hx_tmp6);
HXLINE(  52)		::cpp::Int64 _hx_tmp8;
HXDLIN(  52)		 ::Dynamic tmp5 = activity->__Field(HX_("timestamps",dd,66,2b,6f),::hx::paccDynamic);
HXDLIN(  52)		 ::Dynamic tmp6;
HXDLIN(  52)		if (::hx::IsNotNull( tmp5 )) {
HXLINE(  52)			tmp6 = tmp5->__Field(HX_("start",62,74,0b,84),::hx::paccDynamic);
            		}
            		else {
HXLINE(  52)			tmp6 = null();
            		}
HXDLIN(  52)		if (::hx::IsNotNull( tmp6 )) {
HXLINE(  52)			_hx_tmp8 = ( (::cpp::Int64)(tmp6) );
            		}
            		else {
HXLINE(  52)			_hx_tmp8 = _hx_int64_make(0,0);
            		}
HXDLIN(  52)		::cpp::Int64 _hx_tmp9;
HXDLIN(  52)		 ::Dynamic tmp7 = activity->__Field(HX_("timestamps",dd,66,2b,6f),::hx::paccDynamic);
HXDLIN(  52)		 ::Dynamic tmp8;
HXDLIN(  52)		if (::hx::IsNotNull( tmp7 )) {
HXLINE(  52)			tmp8 = tmp7->__Field(HX_("end",db,03,4d,00),::hx::paccDynamic);
            		}
            		else {
HXLINE(  52)			tmp8 = null();
            		}
HXDLIN(  52)		if (::hx::IsNotNull( tmp8 )) {
HXLINE(  52)			_hx_tmp9 = ( (::cpp::Int64)(tmp8) );
            		}
            		else {
HXLINE(  52)			_hx_tmp9 = _hx_int64_make(0,0);
            		}
HXLINE(  53)		 ::Dynamic tmp9 = activity->__Field(HX_("assets",83,48,03,4c),::hx::paccDynamic);
HXDLIN(  53)		::String tmp10;
HXDLIN(  53)		if (::hx::IsNotNull( tmp9 )) {
HXLINE(  53)			tmp10 = ( (::String)(tmp9->__Field(HX_("largeImage",a0,f5,1e,f3),::hx::paccDynamic)) );
            		}
            		else {
HXLINE(  53)			tmp10 = null();
            		}
HXDLIN(  53)		::String _hx_tmp10;
HXDLIN(  53)		if (::hx::IsNotNull( tmp10 )) {
HXLINE(  53)			_hx_tmp10 = tmp10;
            		}
            		else {
HXLINE(  53)			_hx_tmp10 = HX_("",00,00,00,00);
            		}
HXDLIN(  53)		const char* _hx_tmp11 = ::discord::_GameSDK::NativeString_Impl__obj::_new(_hx_tmp10);
HXDLIN(  53)		 ::Dynamic tmp11 = activity->__Field(HX_("assets",83,48,03,4c),::hx::paccDynamic);
HXDLIN(  53)		::String tmp12;
HXDLIN(  53)		if (::hx::IsNotNull( tmp11 )) {
HXLINE(  53)			tmp12 = ( (::String)(tmp11->__Field(HX_("largeText",08,26,92,bc),::hx::paccDynamic)) );
            		}
            		else {
HXLINE(  53)			tmp12 = null();
            		}
HXDLIN(  53)		::String _hx_tmp12;
HXDLIN(  53)		if (::hx::IsNotNull( tmp12 )) {
HXLINE(  53)			_hx_tmp12 = tmp12;
            		}
            		else {
HXLINE(  53)			_hx_tmp12 = HX_("",00,00,00,00);
            		}
HXDLIN(  53)		const char* _hx_tmp13 = ::discord::_GameSDK::NativeString_Impl__obj::_new(_hx_tmp12);
HXDLIN(  53)		 ::Dynamic tmp13 = activity->__Field(HX_("assets",83,48,03,4c),::hx::paccDynamic);
HXDLIN(  53)		::String tmp14;
HXDLIN(  53)		if (::hx::IsNotNull( tmp13 )) {
HXLINE(  53)			tmp14 = ( (::String)(tmp13->__Field(HX_("smallImage",14,6d,8a,e8),::hx::paccDynamic)) );
            		}
            		else {
HXLINE(  53)			tmp14 = null();
            		}
HXDLIN(  53)		::String _hx_tmp14;
HXDLIN(  53)		if (::hx::IsNotNull( tmp14 )) {
HXLINE(  53)			_hx_tmp14 = tmp14;
            		}
            		else {
HXLINE(  53)			_hx_tmp14 = HX_("",00,00,00,00);
            		}
HXDLIN(  53)		const char* _hx_tmp15 = ::discord::_GameSDK::NativeString_Impl__obj::_new(_hx_tmp14);
HXDLIN(  53)		 ::Dynamic tmp15 = activity->__Field(HX_("assets",83,48,03,4c),::hx::paccDynamic);
HXDLIN(  53)		::String tmp16;
HXDLIN(  53)		if (::hx::IsNotNull( tmp15 )) {
HXLINE(  53)			tmp16 = ( (::String)(tmp15->__Field(HX_("smallText",14,59,33,74),::hx::paccDynamic)) );
            		}
            		else {
HXLINE(  53)			tmp16 = null();
            		}
HXDLIN(  53)		::String _hx_tmp16;
HXDLIN(  53)		if (::hx::IsNotNull( tmp16 )) {
HXLINE(  53)			_hx_tmp16 = tmp16;
            		}
            		else {
HXLINE(  53)			_hx_tmp16 = HX_("",00,00,00,00);
            		}
HXDLIN(  53)		const char* _hx_tmp17 = ::discord::_GameSDK::NativeString_Impl__obj::_new(_hx_tmp16);
HXLINE(  54)		 ::Dynamic tmp17 = activity->__Field(HX_("party",26,91,55,bd),::hx::paccDynamic);
HXDLIN(  54)		::String tmp18;
HXDLIN(  54)		if (::hx::IsNotNull( tmp17 )) {
HXLINE(  54)			tmp18 = ( (::String)(tmp17->__Field(HX_("id",db,5b,00,00),::hx::paccDynamic)) );
            		}
            		else {
HXLINE(  54)			tmp18 = null();
            		}
HXDLIN(  54)		::String _hx_tmp18;
HXDLIN(  54)		if (::hx::IsNotNull( tmp18 )) {
HXLINE(  54)			_hx_tmp18 = tmp18;
            		}
            		else {
HXLINE(  54)			_hx_tmp18 = HX_("",00,00,00,00);
            		}
HXDLIN(  54)		const char* _hx_tmp19 = ::discord::_GameSDK::NativeString_Impl__obj::_new(_hx_tmp18);
HXDLIN(  54)		int _hx_tmp20;
HXDLIN(  54)		 ::Dynamic tmp19 = activity->__Field(HX_("party",26,91,55,bd),::hx::paccDynamic);
HXDLIN(  54)		 ::Dynamic tmp20;
HXDLIN(  54)		if (::hx::IsNotNull( tmp19 )) {
HXLINE(  54)			tmp20 = tmp19->__Field(HX_("size",c1,a0,53,4c),::hx::paccDynamic);
            		}
            		else {
HXLINE(  54)			tmp20 = null();
            		}
HXDLIN(  54)		 ::Dynamic tmp21;
HXDLIN(  54)		if (::hx::IsNotNull( tmp20 )) {
HXLINE(  54)			tmp21 = tmp20->__Field(HX_("currentSize",9a,79,e5,84),::hx::paccDynamic);
            		}
            		else {
HXLINE(  54)			tmp21 = null();
            		}
HXDLIN(  54)		if (::hx::IsNotNull( tmp21 )) {
HXLINE(  54)			_hx_tmp20 = ( (int)(tmp21) );
            		}
            		else {
HXLINE(  54)			_hx_tmp20 = 0;
            		}
HXDLIN(  54)		int _hx_tmp21;
HXDLIN(  54)		 ::Dynamic tmp22 = activity->__Field(HX_("party",26,91,55,bd),::hx::paccDynamic);
HXDLIN(  54)		 ::Dynamic tmp23;
HXDLIN(  54)		if (::hx::IsNotNull( tmp22 )) {
HXLINE(  54)			tmp23 = tmp22->__Field(HX_("size",c1,a0,53,4c),::hx::paccDynamic);
            		}
            		else {
HXLINE(  54)			tmp23 = null();
            		}
HXDLIN(  54)		 ::Dynamic tmp24;
HXDLIN(  54)		if (::hx::IsNotNull( tmp23 )) {
HXLINE(  54)			tmp24 = tmp23->__Field(HX_("maxSize",85,f9,83,cc),::hx::paccDynamic);
            		}
            		else {
HXLINE(  54)			tmp24 = null();
            		}
HXDLIN(  54)		if (::hx::IsNotNull( tmp24 )) {
HXLINE(  54)			_hx_tmp21 = ( (int)(tmp24) );
            		}
            		else {
HXLINE(  54)			_hx_tmp21 = 0;
            		}
HXDLIN(  54)		int _hx_tmp22;
HXDLIN(  54)		 ::Dynamic tmp25 = activity->__Field(HX_("party",26,91,55,bd),::hx::paccDynamic);
HXDLIN(  54)		 ::Dynamic tmp26;
HXDLIN(  54)		if (::hx::IsNotNull( tmp25 )) {
HXLINE(  54)			tmp26 = tmp25->__Field(HX_("privacy",48,1e,6f,89),::hx::paccDynamic);
            		}
            		else {
HXLINE(  54)			tmp26 = null();
            		}
HXDLIN(  54)		if (::hx::IsNotNull( tmp26 )) {
HXLINE(  54)			_hx_tmp22 = ( (int)(tmp26) );
            		}
            		else {
HXLINE(  54)			_hx_tmp22 = 0;
            		}
HXLINE(  55)		 ::Dynamic tmp27 = activity->__Field(HX_("secrets",03,94,82,5c),::hx::paccDynamic);
HXDLIN(  55)		::String tmp28;
HXDLIN(  55)		if (::hx::IsNotNull( tmp27 )) {
HXLINE(  55)			tmp28 = ( (::String)(tmp27->__Field(HX_("match",45,49,23,03),::hx::paccDynamic)) );
            		}
            		else {
HXLINE(  55)			tmp28 = null();
            		}
HXDLIN(  55)		::String _hx_tmp23;
HXDLIN(  55)		if (::hx::IsNotNull( tmp28 )) {
HXLINE(  55)			_hx_tmp23 = tmp28;
            		}
            		else {
HXLINE(  55)			_hx_tmp23 = HX_("",00,00,00,00);
            		}
HXDLIN(  55)		const char* _hx_tmp24 = ::discord::_GameSDK::NativeString_Impl__obj::_new(_hx_tmp23);
HXDLIN(  55)		 ::Dynamic tmp29 = activity->__Field(HX_("secrets",03,94,82,5c),::hx::paccDynamic);
HXDLIN(  55)		::String tmp30;
HXDLIN(  55)		if (::hx::IsNotNull( tmp29 )) {
HXLINE(  55)			tmp30 = ( (::String)(tmp29->__Field(HX_("join",ea,33,65,46),::hx::paccDynamic)) );
            		}
            		else {
HXLINE(  55)			tmp30 = null();
            		}
HXDLIN(  55)		::String _hx_tmp25;
HXDLIN(  55)		if (::hx::IsNotNull( tmp30 )) {
HXLINE(  55)			_hx_tmp25 = tmp30;
            		}
            		else {
HXLINE(  55)			_hx_tmp25 = HX_("",00,00,00,00);
            		}
HXDLIN(  55)		const char* _hx_tmp26 = ::discord::_GameSDK::NativeString_Impl__obj::_new(_hx_tmp25);
HXDLIN(  55)		 ::Dynamic tmp31 = activity->__Field(HX_("secrets",03,94,82,5c),::hx::paccDynamic);
HXDLIN(  55)		::String tmp32;
HXDLIN(  55)		if (::hx::IsNotNull( tmp31 )) {
HXLINE(  55)			tmp32 = ( (::String)(tmp31->__Field(HX_("spectate",d9,d7,ba,92),::hx::paccDynamic)) );
            		}
            		else {
HXLINE(  55)			tmp32 = null();
            		}
HXDLIN(  55)		::String _hx_tmp27;
HXDLIN(  55)		if (::hx::IsNotNull( tmp32 )) {
HXLINE(  55)			_hx_tmp27 = tmp32;
            		}
            		else {
HXLINE(  55)			_hx_tmp27 = HX_("",00,00,00,00);
            		}
HXDLIN(  55)		const char* _hx_tmp28 = ::discord::_GameSDK::NativeString_Impl__obj::_new(_hx_tmp27);
HXLINE(  56)		 ::Dynamic tmp33 = activity->__Field(HX_("instance",95,1f,e1,59),::hx::paccDynamic);
HXDLIN(  56)		bool _hx_tmp29;
HXDLIN(  56)		if (::hx::IsNotNull( tmp33 )) {
HXLINE(  56)			_hx_tmp29 = ( (bool)(tmp33) );
            		}
            		else {
HXLINE(  56)			_hx_tmp29 = false;
            		}
HXDLIN(  56)		 ::Dynamic tmp34 = ( (int)(activity->__Field(HX_("supportedPlatforms",52,8e,44,dc),::hx::paccDynamic)) );
HXDLIN(  56)		int _hx_tmp30;
HXDLIN(  56)		if (::hx::IsNotNull( tmp34 )) {
HXLINE(  56)			_hx_tmp30 = ( (int)(tmp34) );
            		}
            		else {
HXLINE(  56)			_hx_tmp30 = 0;
            		}
HXLINE(  50)		discord_activity::updateActivity(_hx_tmp,_hx_tmp1,_hx_tmp3,_hx_tmp5,_hx_tmp7,_hx_tmp8,_hx_tmp9,_hx_tmp11,_hx_tmp13,_hx_tmp15,_hx_tmp17,_hx_tmp19,_hx_tmp20,_hx_tmp21,_hx_tmp22,_hx_tmp24,_hx_tmp26,_hx_tmp28,_hx_tmp29,( (unsigned int)(_hx_tmp30) ));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GameSDK_obj,updateActivity,(void))


GameSDK_obj::GameSDK_obj()
{
}

bool GameSDK_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { outValue = create_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"runCallbacks") ) { outValue = runCallbacks_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"registerSteam") ) { outValue = registerSteam_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"updateActivity") ) { outValue = updateActivity_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"registerCommand") ) { outValue = registerCommand_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *GameSDK_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *GameSDK_obj_sStaticStorageInfo = 0;
#endif

::hx::Class GameSDK_obj::__mClass;

static ::String GameSDK_obj_sStaticFields[] = {
	HX_("create",fc,66,0f,7c),
	HX_("runCallbacks",43,2a,78,15),
	HX_("registerCommand",28,d5,81,34),
	HX_("registerSteam",2d,31,77,79),
	HX_("updateActivity",f8,20,dc,1a),
	::String(null())
};

void GameSDK_obj::__register()
{
	GameSDK_obj _hx_dummy;
	GameSDK_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("discord.GameSDK",06,b5,99,53);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &GameSDK_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(GameSDK_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< GameSDK_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GameSDK_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GameSDK_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace discord
